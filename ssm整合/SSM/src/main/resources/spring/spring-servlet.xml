<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd ">

    <!--启动注解,配置注解扫描包
    排除了service注解-->
    <context:component-scan base-package="com.lyj.controller">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>

    <!--配置视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--<加上mvc驱动，即注解驱动-->
    <mvc:annotation-driven>
        <!--需要时再把下面的全部打开-->
        <!--&lt;!&ndash;配置消息转换器以支持JSON的使用&ndash;&gt;-->
        <!--<mvc:message-converters>-->
        <!--<bean class="org.springframework.http.converter.StringHttpMessageConverter">-->
        <!--<property name="supportedMediaTypes">-->
        <!--<list>-->
        <!--<value>application/json:charset=UTF-8</value>-->
        <!--</list>-->
        <!--</property>-->
        <!--</bean>-->
        <!--</mvc:message-converters>-->
    </mvc:annotation-driven>

    <!--请求映射适配器-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">-->
    <!--<property name="messageConverters">-->
    <!--<list>-->
    <!--<bean class="org.springframework.http.converter.StringHttpMessageConverter">-->
    <!--<property name="supportedMediaTypes">-->
    <!--<list>-->
    <!--<value>text/html:charset=UTF-8</value>-->
    <!--<value>application/json:charset=UTF-8</value>-->
    <!--</list>-->
    <!--</property>-->
    <!--</bean>-->
    <!--</list>-->
    <!--</property>-->
    <!--</bean>-->

    <!--文件上传 id必须名为multipartResolver  注册我们的文件上传解析器-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="54000000"/>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>
    <!--默认的servlet处理者，静态资源的请求处理者-->
    <mvc:default-servlet-handler/>

    <!--拦截器 start-->
    <mvc:interceptors>
        <!--//会话拦截器谁放在前放在后是有讲究的。-->
        <mvc:interceptor>
            <!--/*代表只能拦截/name的方法，只有一层，不能拦截多层。
            /**/*代表拦截多层任意层下的任意种方法。-->
            <mvc:mapping path="/**/*"/>
            <bean class="com.lyj.interceptors.MethodTimeInterceptor">
            </bean>
        </mvc:interceptor>
        <mvc:interceptor>
            <!--只想拦截/user/**/*代表user层下的多层下的任意方法
                但还需要开放登录权限
            -->
            <mvc:mapping path="/user/**/*"/>
            <!--排除登录的URI，释放登录的权限-->
            <mvc:exclude-mapping path="/user/login"/>
            <bean class="com.lyj.interceptors.SessionInterceptor">
            </bean>
        </mvc:interceptor>
    </mvc:interceptors>
    <!--拦截器 =end=-->

</beans>